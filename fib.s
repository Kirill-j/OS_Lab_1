		.file	"fib.c" 				// Откуда сгенерирован
		.text							// Начало секции кода
		.globl	fib						// Функция глобальна
		.type	fib, @function			// Тип - функция
fib:									// Начало фунции
.LFB0:									// Начало базового блока функции
		.cfi_startproc					// Начало процедуры отладки
		endbr64							// Инструкция безопасности для защиты от переполнения
		pushq	%rbp					// Сохраняет текущее значение %rbp на вершине стека
		.cfi_def_cfa_offset 16			// Устнавливает смещение на 16 байт
		.cfi_offset 6, -16				// Указывает, что значение %rbp находится по адресу -16 от текущего значения
		movq	%rsp, %rbp				// Устанавливает значение %rsp в %rbp создавая рамку стека
		.cfi_def_cfa_register 6			// Указывает, что %rbp - текущий указатель CFA
		pushq	%rbx					// Сохраняет текущее значение %rbx на вершине стека
		subq	$24, %rsp				// Резервирует место для локальных переменных (24 байта)
		.cfi_offset 3, -24				// Указывает, что %rbx находится на -24 от текущего значения CFA
		movl	%edi, -20(%rbp)			// Копирует значение первого аргумента в позицию
		cmpl	$1, -20(%rbp)			// Сравнивает значение аргумента с константой 1
		je	.L2 						// Если равно переходит к L2
		cmpl	$2, -20(%rbp)			// Сравнивает значение аргумента с константой 2
		jne	.L3							// Если не равно переходит к L3
.L2:									// Начало блока кода если аргумент равен 1
		movl	$1, %eax				// Загружает значение 1 в %eax
		jmp	.L4							// Переход к L4
.L3:									// Начало блока кода если аргумент неравен 1
		movl	-20(%rbp), %eax			// Загружает значение аргумента в %eax
		subl	$1, %eax				// Вычитает 1 из 
		movl	%eax, %edi				// Копирует из в 
		call	fib						// Вызов функции
		movl	%eax, %ebx				// Сохраняет возвращаемое значение из fib в %eax
		movl	-20(%rbp), %eax			// Загружает значение аргумента в 
		subl	$2, %eax				// Вычитает 2
		movl	%eax, %edi				// Копирует из в
		call	fib						// Вызов функции
		addl	%ebx, %eax				// Складывает результыты возовов функции
.L4:									// Начало блока кода после вычисления результата
		movq	-8(%rbp), %rbx			// Восстанавливает значение %rbx из стека
		leave							// Выходит из функции
		.cfi_def_cfa 7, 8				// Обновляет информацию об CFA почле завершения функции
		ret								// Возвращает результат
		.cfi_endproc					// Завершение процедуры отладки
.LFE0:
		.size	fib, .-fib
		.ident	"GCC: (Ubuntu 13.2.0-4ubuntu3) 13.2.0"
		.section	.note.GNU-stack,"",@progbits
		.section	.note.gnu.property,"a"
		.align 8
		.long	1f - 0f
		.long	4f - 1f
		.long	5
0:
		.string	"GNU"
1:
		.align 8
		.long	0xc0000002
		.long	3f - 2f
2:
		.long	0x3
3:
		.align 8
4:
